These following tests excercise the functionality of the workspace settings
page.

First we will import necessary classes

  >>> import os
  >>> from elementtree.ElementTree import tostring as ettostring
  >>> from lxml.etree import XML, tostring as lxtostring
  >>> from Products.COL3.tests.xml_validator import XMLValidator
  >>> validator = XMLValidator()
  >>> from Testing.makerequest import makerequest
  >>> from Products.COL3.browser.tests import __file__ as testdir
  >>> testdir = os.path.dirname(testdir)
  >>> def tostring(elem):
  ...     return lxtostring(XML(ettostring(elem)), pretty_print=True)
  >>> def prepWorkspaceAndRequest(app=app):
  ...     app = makerequest(app.aq_base)
  ...     workspace = app.plone.workspaces['ws'].unrestrictedTraverse('++skin++col')
  ...     return workspace, workspace.REQUEST

And create a workspace to edit

  >>> self.setRoles(['Member','Community Member'])
  >>> app.plone.workspaces.invokeFactory("Workspace", "ws") and None
  >>> self.login()
  >>> workspace = app.plone.workspaces['ws']

Now we get the form for editing workspace settings.

  >>> wspace = app.plone.workspaces['ws'].unrestrictedTraverse('++skin++col')
  >>> editWorkspaceConfigPage = wspace.restrictedTraverse("@@edit-properties.html")
  >>> response = editWorkspaceConfigPage.getResponse()

XML should validate against tnc.rng schema.

  >>> validator.validateString(tostring(response)) # doctest: -REPORT_NDIFF

  >>> response.find('resource').attrib['uuid'] = ''
  >>> response.find('resource/creation_date').text = ''
  >>> response.find('resource/modification_date').text = ''
  >>> response.find('user/lastlogin').text = ''
  >>> print tostring(response) #doctest: +XMLDATA
  <response>
    <view name="edit-properties.html" section="workspaces" title="Workspace Settings" type="workspace"/>
    <formcontroller action="http://nohost">
        <field name="form.title" required="required" widget="text">
          <label>Workspace Name (up to 75 characters)</label>
          <description>Examples: Colorado Federal Public Lands Strategy, Western State Trust Lands, Kenya's Biodiversity Mapping Project.</description>
        </field>
        <field name="form.workspacelogo" widget="file">
          <label>Logo</label>
          <description>An image in PNG format to identify your workspace.</description>
        </field>
        <field name="form.workspaceicon" widget="file">
          <label>Icon</label>
          <description>A 32x32 pixel image to identify your workspace (if this is left blank the logo file above (if supplied) will be used for the icon image)</description>
        </field>
        <field name="form.remove_logo" required="required" widget="radiogroup">
          <label>Remove Logo?</label>
          <description>Remove the uploaded logo and return the icon to the default.</description>
          <value>
            <option selected="selected" value="no">No, keep using my images.</option>
            <option value="yes">Yes, discard my images and return to defaults.</option>
          </value>
        </field>
        <field name="form.description" widget="textarea">
          <label>Purpose</label>
          <description>This description will appear on the home page of your workspace</description>
        </field>
        <field name="form.content" widget="editor">
          <label>Content</label>
        </field>
        <field name="form.is_private" required="required" widget="radiogroup">
          <label>Is the workspace public or private?</label>
          <value>
            <option selected="selected" value="False">Public, everyone can see content not made private.</option>
            <option value="True">Private, only workspace members can see content.</option>
          </value>
        </field>
        <field name="form.language" required="required" widget="selection">
          <label>Language</label>
          <value vocabulary="languages" xml:space="preserve"/>
        </field>
        <field name="form.country" required="required" widget="selection">
          <label>Region/Country</label>
          <value vocabulary="countries" xml:space="preserve"/>
        </field>
        <field name="form.biogeographic_realm" required="required" widget="selection">
          <label>Biogeographic realm</label>
          <value vocabulary="biogeographic_realms" xml:space="preserve"/>
        </field>
        <field name="form.habitat" widget="checkboxgroup">
          <label>Habitat type</label>
          <value vocabulary="habitats"/>
        </field>
        <field name="form.conservation" widget="checkboxgroup">
          <label>Conservation action</label>
          <value vocabulary="conservation"/>
        </field>
        <field name="form.directthreat" widget="checkboxgroup">
          <label>Direct threat</label>
          <value vocabulary="directthreat"/>
        </field>
        <field name="form.organization" widget="text">
          <label>Organization</label>
          <description>Examples: The Nature Conservancy, World Wildlife Fund, IUCN.</description>
        </field>
        <field name="form.monitoring" widget="checkboxgroup">
          <label>Monitoring type</label>
          <description>The methods used to determine whether the conservation actions described in this document are succeeding</description>
          <value vocabulary="monitoring"/>
        </field>
        <field name="form.keywords" widget="text">
          <label>Other Search Terms</label>
          <description>Examples: biodiversity, freshwater, Natural Heritage Programs, panthera leo</description>
        </field>
        <field name="form.license" required="required" widget="selection">
          <label>License</label>
          <value vocabulary="licenses" xml:space="preserve"/>
        </field>
        <submit name="form.actions.save">Save</submit>
        <submit name="form.actions.cancel">Cancel</submit>
    </formcontroller>
    <workspace href="http://nohost/plone/workspaces/ws">
        <title/>
        <editpropsurl>http://nohost/plone/workspaces/ws/edit-properties.html</editpropsurl>
        <private>false</private>
        <section>home</section>
    </workspace>
    <user href="http://nohost/plone/view-profile.html?userid=test_user_1_">
        <username>test_user_1_</username>
        <title/>
        <lastlogin></lastlogin>
        <isadmin>true</isadmin>
    </user>
    <resource href="http://nohost/plone/workspaces/ws" uuid="">
        <type title="Workspace">Workspace</type>
        <mimetype id="text">TEXT</mimetype>
        <author href="http://nohost/plone/view-profile.html?userid=test_user_1_">test_user_1_</author>
        <size>1</size>
        <id>ws</id>
        <subject/>
        <creation_date/>
        <modification_date/>
        <is_private>false</is_private>
        <habitat/>
        <conservation/>
        <directthreat/>
        <monitoring/>
        <keywords/>
    </resource>
    <breadcrumbs>
        <entry href="http://nohost/plone">Home</entry>
        <base>http://nohost/plone/workspaces/ws/</base>
        <entry href="http://nohost/plone/workspaces/">workspaces</entry>
        <entry href="http://nohost/plone/workspaces/ws/">ws</entry>
        <entry>Workspace Settings</entry>
    </breadcrumbs>
  </response>


Now we'll attempt to edit the workspace properties directly and then checking the values
on the workspace to make sure they've been set properly

  >>> wspace, request = prepWorkspaceAndRequest()
  >>> testlogo = os.path.join(testdir, 'notDefaultUser.gif')
  >>> testicon = os.path.join(testdir, 'iconImage.jpg')
  >>> testfile = os.path.join(testdir, 'notDefaultUser.gif')
  >>> request.form['form.title'] = 'My Workspace Title'
  >>> request.form['form.workspacelogo'] = open(testlogo, 'rb')
  >>> request.form['form.workspaceicon'] = open(testicon, 'rb')
  >>> request.form['form.remove_logo'] = 'no'
  >>> request.form['form.description'] = u'This is the description'
  >>> request.form['form.content'] = u'This is the content'
  >>> request.form['form.is_private'] = 'False'
  >>> request.form['form.language'] = 'hy'
  >>> request.form['form.country'] = 'ALB'
  >>> request.form['form.biogeographic_realm'] = u'oceania'
  >>> request.form['form.habitat'] = u'pelagic'
  >>> request.form['form.conservation'] = 'lawpolicy'
  >>> request.form['form.directthreat'] = 'invasives'
  >>> request.form['form.monitoring'] = 'replicated'
  >>> request.form['form.license'] = 'a-nc'
  >>> request.form['form.actions.save'] = 'Save'
  >>> wspace.restrictedTraverse('@@edit-properties.html').getResponse()
  Traceback (most recent call last):
  ...
  SafeRedirect: http://foo/plone/workspaces/ws

  >>> print wspace.getLanguage()
  hy
  >>> print wspace.getCountry()
  ALB
  >>> print wspace.getWorkspaceCountry()
  ALB
  >>> print wspace.getBiogeographic_realm()
  oceania
  >>> print '\n'.join(wspace.getHabitat())
  pelagic
  >>> print '\n'.join(wspace.getConservation())
  lawpolicy
  >>> print '\n'.join(wspace.getDirectthreat())
  invasives
  >>> print '\n'.join(wspace.getMonitoring())
  replicated

Now let's test the getCountry/getWorkspaceCountry behavior::

  >>> _ = app.plone.workspaces.invokeFactory('Workspace', 'foo')
  >>> foo = app.plone.workspaces.foo
  >>> _ = app.plone.invokeFactory('Workspace', 'bar')
  >>> bar = app.plone.bar
  >>> foo.setCountry('FOO')
  >>> bar.setCountry('BAR')

  >>> print foo.getCountry()
  FOO
  >>> print foo.getWorkspaceCountry()
  FOO
  >>> print bar.getCountry()
  BAR
  >>> print bar.getWorkspaceCountry()
  None

