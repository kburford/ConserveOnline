Password change view tests
~~~~~~~~~~~~~~~~~~~~~~~~~

These tests ensure expected functionality for the view class used by the 
COL3 password change form.

  >>> portal = self.portal

Create the browser object we'll be using.

  >>> from Products.Five.testbrowser import Browser
  >>> browser = Browser()
  >>> browser.handleErrors = False

Defining some convenience functions

  >>> def fillIn(field, value):
  ...     browser.getControl(field).value = value

  >>> def fillInByName(field, value):
  ...     browser.getControl(name='form.%s' % field).value = value

  >>> def select(field):
  ...     browser.getControl(field).selected = True

  >>> def click(field):
  ...     browser.getControl(field).click()

  >>> def getCaptchaSolution(portal, hash):
  ...     from Products.qPloneCaptchas.utils import decrypt
  ...     from Products.qPloneCaptchas.utils import getWord
  ...     from Products.qPloneCaptchas.utils import parseKey
  ...     captcha_key = portal.captcha_key
  ...     return getWord(int(parseKey(decrypt(captcha_key, hash))['key']))

  >>> def testCredentials(login, password):
  ...     creds = {'login':login, 'password':password}
  ...     result = portal.acl_users.source_users.authenticateCredentials(creds)
  ...     if result == (login, login):
  ...         return True
  ...     return False

We will create a new member for this purpose, with the login "pwchangeuser" and the password "supersecret".

  >>> test_user = 'pwchangeuser'
  >>> test_password = 'supersecret'

  >>> from Products.CMFCore.utils import getToolByName 
  >>> properties = dict(username=test_user,
  ...                   fullname='New User',
  ...                   email='testuser@example.com',
  ...                   type_of_organization='Government',
  ...                   organization='My Organization',
  ...                   country='Albania',
  ...                  )
  >>> registration_tool = getToolByName(app.plone, 'portal_registration')
  >>> registration_tool.addMember(test_user,
  ...                             test_password,
  ...                             properties=properties.copy()               
  ...                            ) and None

Now I "log in" by visiting the login url and getting the auth. cookie.

  >>> browser.handleErrors = False
  >>> browser.open('http://localhost/++skin++col/plone/login?__ac_name=' + 
  ...              test_user + '&__ac_password=' + test_password)

Let's check the it worked

  >>> browser.open('http://localhost/++skin++col/plone/portal_membership/getAuthenticatedMember')
  >>> browser.contents
  'pwchangeuser'
 
First off, set up a request with missing form data. The password will remain
unchanged.

  >>> browser.open('http://localhost/++skin++col/plone/changepassword.html')
  >>> click('Change password')
  >>> browser.url
  'http://localhost/++skin++col/plone/changepassword.html'
  >>> 'Required input is missing.' in browser.contents
  True
  >>> testCredentials(test_user, test_password)
  True

Now we provide a password with a wrong confirmation. The user password will
remain he same.

  >>> browser.open('http://localhost/++skin++col/plone/changepassword.html')
  >>> fillIn('New password', 'secret123')
  >>> fillIn('Confirm new password', 'thisdoesnotmatch')
  >>> click('Change password')
  >>> browser.url
  'http://localhost/++skin++col/plone/changepassword.html'
  >>> 'Required input is missing.' in browser.contents
  False
  >>> testCredentials(test_user, test_password)
  True

If the password and confirmation match, but the value is too short, the user
password will remain the same.

  >>> browser.open('http://localhost/++skin++col/plone/changepassword.html')
  >>> fillIn('New password', '123')
  >>> fillIn('Confirm new password', '123')
  >>> click('Change password')
  >>> browser.url
  'http://localhost/++skin++col/plone/changepassword.html'
  >>> 'Required input is missing.' in browser.contents
  False
  >>> 'Please use a password that is at least 8 characters' in browser.contents
  True
  >>> testCredentials(test_user, test_password)
  True

The password may not match the username.

  >>> browser.open('http://localhost/++skin++col/plone/changepassword.html')
  >>> fillIn('New password', test_user)
  >>> fillIn('Confirm new password', test_user)
  >>> click('Change password')
  >>> browser.url
  'http://localhost/++skin++col/plone/changepassword.html'
  >>> 'Required input is missing.' in browser.contents
  False
  >>> testCredentials(test_user, test_password)
  True

Now all values are correct and the password is changed.

  >>> browser.open('http://localhost/++skin++col/plone/changepassword.html')
  >>> fillIn('New password', 'secret123')
  >>> fillIn('Confirm new password', 'secret123')
  >>> click('Change password')
  >>> browser.url
  'http://localhost/++skin++col/plone/changepassword.html'
  >>> 'Required input is missing.' in browser.contents
  False
  >>> testCredentials(test_user, test_password)
  False
  >>> testCredentials(test_user, 'secret123')
  True
